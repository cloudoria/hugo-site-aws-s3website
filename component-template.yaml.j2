metadata:
  name: hugo-site-aws-s3website
  description: Deploy a static Hugo website on an AWS S3 Website
  language: Go
  frameworks: hugo  # string or list
  search-tags:
    - hugo
    - Go
    - static website
    - s3
    - s3 website
  source: https://github.com/cloudoria/hugo-site-aws-s3website/
  license: GPLv3
  author: fredrik@cloudoria.io

parameters:
  - parameter: sitename
    prompt: What would you like to call your site (e.g. my-website)?
    type: string

  - parameter: websitebucketname
    prompt: What would you like to call your S3 bucket website (e.g. example.com)?
    type: string
  
files:
  - readme.md:
    source: readme.md.j2

dependencies:
  - hugo:
      not_found: Please install hugo, for more information visit https://gohugo.io
  - huggo:
      not_found: This should not exist, visit https://gohugo.io
  - hugggoo-no-not_found-helper:

platform_specific_dependencies:
  docker:
    image: gohugoio/hugo:latest

# use these steps in project .yaml to build pipelines for your project, components, and stages based combinations of steps.
steps:
  setup:  # mandatory step
    - hugo new site {{ param.sitenameÂ }}  # commands to be executed when the component is generated
    - ls -al # trying an additional command with comment after
  
  pre_setup_for_docker: 
    - pip install awscli

  build:
    - hugo -D

  deploy:  # mandatory step
    # create s3 bucket website
    - aws s3 mb {{ param.websitebucketname }}
    - aws s3 website {{ param.websitebucketname }} --index-document index.html --error-document error.html
    # upload static files from public/
    - aws s3 sync public/* {{ param.websitebucketname }}
  
  run_this_only_in_test:
    - curl https://someurl.s3website.amazon.com
  
  name_your_steps_to_your_taste:
    - ls -al /

decommission:
    - aws s3 rb {{ param.websitebucketname }} --force
